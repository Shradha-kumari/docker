apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: shradha11/flaskapp:{{ .Values.image_tag }}
        #image: ashutosh04/blogapp:<IMAGE_TAG>
        ports:
        - containerPort: 5000
        env:
            - name: FLASK_ENV
              value: "stage"
            - name: CUSTOM_MESSAGE
              value: "Hello from K8s!"
        envFrom:
            - configMapRef:
                name: {{ .Values.name }}-config
        readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
        volumeMounts:
          - name: app-data
            mountPath: /data   # This path will exist in the container
          - name: app-secret
            mountPath: {{ .Values.secretMountPath }}
            readOnly: true
      volumes:
        - name: app-data
          emptyDir: {} 
        - name: app-secret
          secret:
            secretName: {{ .Values.secretName }}
      - name: sidecar
          image: "{{ .Values.sidecar.image }}"
          ports:
            - containerPort: 5000
      